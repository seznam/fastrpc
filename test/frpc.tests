# FastRPC tests
# Lines beginning with '#' are comments
# Lines beginning with '@' define visible test names
# First line is hexadecimal/string binary representation
# Second line is textual representation of the result
# error(TEXT) has a special meaning - it means an exception is expected

#################################
#### Various prologue errors ####
#################################
@Exception: Invalid protocol version
#MGC VER
CA11 FFFF
error(bad protocol version)

CA11 0000
error(bad protocol version)

@No data after call
CA11 0200
error(unexpected data end)

########################
#### Premature ends ####
########################
@Premature data end
CA11 0200 70
error(unexpected data end)

CA11  0200  70 50
error(unexpected data end)

CA11  0200  70 50 02
error(unexpected data end)

CA11  0200  70 50 02 02
error(unexpected data end)

CA11  0200  70 50 02 02 73
error(unexpected data end)

# incomplete integer
CA11  0200 68 04 "help" 39
error(unexpected data end)

CA11  0200 68 04 "help" 39 f4
error(unexpected data end)

#################################
#### Various valid responses ####
#################################
@method response {status=200, statusMessage=Ok}
#MGC  VER   RS STRUCT MEMBERS KL "status" INT(200) KL  "statusMessage" STR  "Ok"
CA11  0200  70 50     02      06 "status" 38 c8    0d  "statusMessage" 2002 "Ok"
{status: 200, statusMessage: "Ok"}

@call help("help")
#MGC VER  CALL    "help" STR   "what"
CA11 0200 68   04 "help" 20 04 "what"
help("what")

######################
#### Struct tests ####
######################
@struct 0 items
CA11 0200 70 50 00
{}

@struct key zero length
CA11 0200 70 50 01 00 09 c8
error(bad key length)

@struct max key length
CA11 0200 70 50 01 FF "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" 09 c8
{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa: 200}

@premature struct end - 1 pair instead of 2
CA11 0200 70 50 02 01 "a" 09c8
error(unexpected data end)

@struct containing empty struct and struct with values
CA11 0200 70 50 02 02 "s1" 50 00 02 "s2" 50 01 01 "k" 20 01 "v"
{s1: {}, s2: {k: "v"}}

@struct in deep recursion
CA11 0200 70 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 50 01 01 "a" 20 04 "DEEP"
{a: {a: {a: {a: {a: {a: {a: {a: {a: {a: {a: {a: {a: {a: {a: {a: "DEEP"}}}}}}}}}}}}}}}}

@struct more complex struct
CA11 0200 70 50 04 04 "ahoj" 50 01 03 "cau" 20 04 "hele" 05 "intik" 39 f401 06 "string" 20 04 "fuj!" 03 "str" 50 03 04 "ahoj" 50 01 03 "cau" 20 04 "hele" 05 "intik" 39 f401 06 "string" 20 04 "fuj!"
{ahoj: {cau: "hele"}, intik: 500, str: {ahoj: {cau: "hele"}, intik: 500, string: "fuj!"}, string: "fuj!"}

@struct, size over hardcoded limit
CA11 0200 70 5F 1000004000000000
error(entity too large)

#####################
#### Fault tests ####
#####################
@valid fault
#MGC VER  FAULT PINT(500)
CA11 0200 78    39   f401     200a "FAULT_TEST"
fault(500, FAULT_TEST)

@valid fault, v3 protocol int
#MGC VER  FAULT INT(500)
CA11 0300 78    09   e803     200a "FAULT_TEST"
fault(500, FAULT_TEST)

@fault without code
CA11 0200 78    200a "FAULT_TEST"
error(invalid fault)

@fault without text
CA11 0200 78    39   f401
error(unexpected data end)

@fault without both text and code
CA11 0200 78
error(unexpected data end)

@fault, valid, different int type (v1)
CA11 0100 78 0A f401 210a "FAULT_TEST"
fault(500, FAULT_TEST)

@fault, invalid, duplicate string
CA11 0200 78 39 f401 200b "FAULT_TEST1" 200b "FAULT_TEST2"
error(invalid fault)

@fault, invalid, duplicate int
CA11 0200 78 39 f401 38 01 200a "FAULT_TEST"
error(invalid fault)

@invalid fault - swapped order
#MGC VER  FAULT PINT(500)
CA11 0200 78 200a "FAULT_TEST" 39 f401
error(invalid fault)

# Fault with other types than int/string combo
# Fault with duplicate items

##################
#### Integers ####
##################
@v3 integer in v2 stream
CA11 0200 70 50 01 06 "badint" 09 e803
error(unknown type)

@v3 integer in v3 stream is okay
CA11 0300 70 50 01 07 "goodint" 09 e803
{goodint: 500}

@v3 integer 0
CA11 0300 70 50 01 04 "zero" 08 00
{zero: 0}

@v3 integer 1
CA11 0300 70 50 01 03 "int" 08 02
{int: 1}

@v3 integer -1
CA11 0300 70 50 01 03 "int" 08 01
{int: -1}

@v3 maximal length int, negative
CA11 0300 70 50 01 06 "maxint" 0F FFFFFFFFFFFFFFFF
{maxint: -9223372036854775808}

@v3 maximal length int, positive
CA11 0300 70 50 01 06 "maxint" 0F FEFFFFFFFFFFFFFF
{maxint: 9223372036854775807}

@v2 positive int, both v2 and v3
CA11 0200 70 50 01 04 "pint" 38 00
{pint: 0}

CA11 0200 70 50 01 04 "pint" 38 01
{pint: 1}

CA11 0300 70 50 01 04 "pint" 38 01
{pint: 1}

@v2 positive int max value
CA11 0200 70 50 01 04 "pint" 3F FFFFFFFFFFFFFF7F
{pint: 9223372036854775807}

@v2 negative int, both v2 and v3
CA11 0200 70 50 01 04 "nint" 40 00
{nint: 0}

CA11 0200 70 50 01 04 "nint" 40 01
{nint: -1}

CA11 0300 70 50 01 04 "nint" 40 01
{nint: -1}

# this illustrates the problem with this encoding quite well
CA11 0300 70 50 01 04 "nint" 47 FFFFFFFFFFFFFF7F
{nint: -9223372036854775807}

#v1 integer, invalid length 0
CA11 0200 70 50 01 03 "int" 08
error(bad size)

@v1 integer, 1 byte 0, protocol v1
CA11 0100 70 51 01 03 "int" 09 00
{int: 0}

@v1 integer, 1 byte 0, protocol v2
CA11 0200 70 50 01 03 "int" 09 00
{int: 0}

#################
#### Boolean ####
#################
@bool false
CA11 0200 70 50 01 04 "bool" 10
{bool: false}

@bool true
CA11 0200 70 50 01 04 "bool" 11
{bool: true}

@invalid bool value
CA11 0200 70 50 01 04 "bool" 12
error(invalid bool value)

################
#### Double ####
################
@double 0
CA11 0200 70 50 01 06 "double" 18 00000000 00000000
{double: 0}

@double -0
CA11 0200 70 50 01 06 "double" 18 00000000 00000080
{double: -0}

@double 1
CA11 0200 70 50 01 06 "double" 18 00000000 0000f03f
{double: 1}

@double -2
CA11 0200 70 50 01 06 "double" 18 00000000 000000c0
{double: -2}

@double inf
CA11 0200 70 50 01 06 "double" 18 00000000 0000f07f
{double: inf}

@double -inf
CA11 0200 70 50 01 06 "double" 18 00000000 0000f0ff
{double: -inf}

@double NaN
CA11 0200 70 50 01 06 "double" 18 ffffffff ffffff7f
{double: nan}

# this is kind of fragile, it depends on double dump precision
@double 1/3
CA11 0200 70 50 01 06 "double" 18 55555555 5555d53f
{double: 0.333333}

################
#### String ####
################
@string with no chars, v1
CA11 0100 70 51 01 03 "str" 21 00
{str: ""}

@string with no chars, v2
CA11 0200 70 50 01 03 "str" 20 00
{str: ""}

@string with no chars, followed by string with some chars
CA11 0200 70 50 02 04 "str0" 20 00 04 "str1" 20 04 "PASS"
{str0: "", str1: "PASS"}

@string, 1 character
CA11 0200 70 50 01 03 "str" 20 01 "A"
{str: "A"}

@string, string size over limit
CA11 0200 70 50 01 03 "str" 2F 1000004000000000 "A"
error(unexpected data end)

@string, multiple characters
CA11 0200 70 50 01 03 "str" 20 0A "Hello FRPC"
{str: "Hello FRPC"}

@bad string size in protocol version 1
CA11 0100 70 51 01 03 "str" 20
error(bad size)

###############
#### Array ####
###############
@array with no elements, v1
CA11 0100 70 51 01 05 "array" 59 00
{array: ()}

@array with no elements, v2
CA11 0200 70 50 01 05 "array" 58 00
{array: ()}

@array with 2 empty arrays, v2
CA11 0200 70 50 01 05 "array" 58 02 58 00 58 00
{array: ((), ())}

@array 1 element string
CA11 0200 70 50 01 05 "array" 58 01 20 05 "Hello"
{array: ("Hello")}

@array, length > 32 bits
CA11 0200 70 50 01 05 "array" 5F 0100000000000001 20 05 "Hello"
error(invalid array length)

@array, length >= 30 bits (hardcoded sanity limit)
CA11 0200 70 50 01 05 "array" 5F 1000004000000000 20 05 "Hello"
error(entity too large)

@deep array
CA11 0200 70 50 01 05 "array" 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 58 01 20 04 "DEEP"
{array: ((((((((((((((((("DEEP")))))))))))))))))}

################
#### Binary ####
################
@binary v1 empty
CA11 0100 70 51 01 06 "binary" 31 00
{binary: b""}

@binary v1 bad size
CA11 0100 70 51 01 06 "binary" 30
error(bad size)

@binary v2 empty
CA11 0200 70 50 01 06 "binary" 30 00
{binary: b""}

@binary v2 CA FE
CA11 0200 70 50 01 06 "binary" 30 02 CAFE
{binary: b"ca fe"}

@binary, size over limit
CA11 0200 70 50 01 06 "binary" 37 1000004000000000 CA
error(entity too large)

##############
#### Null ####
##############
@null in v1 stream - unknown type
CA11 0100 70 51 01 04 "null" 60
error(unknown type)

@null in v2 stream okay
CA11 0201 70 50 01 04 "null" 60
{null: null}

@null in v3 stream okay
CA11 0300 70 50 01 04 "null" 60
{null: null}

##################
#### DateTime ####
##################
@v1 datetime
# (20170127T12:39:19+0000)       DT ZN UNX       WDSEC  MIN<<1|HR<<7 HR>>1|day<<4  YR<5|D>4|M<1 YR>3
CA11 0100 70 51 01 08 "datetime" 28 00 773F8B58  9D     4E           B6            23           34
{datetime: 20170127T12:39:19+0000}

@v2 datetime
CA11 0200 70 50 01 08 "datetime" 28 00 773F8B58  9D     4E           B6            23           34
{datetime: 20170127T12:39:19+0000}

@v3 datetime
CA11 0300 70 50 01 08 "datetime" 28 00 773F8B5800000000  9D     4E           B6            23           34
{datetime: 20170127T12:39:19+0000}

###############
### Result ####
###############
# TODO

@result plain int
CA11 0300 70 08 01
-1

@result plain str
CA11 0200 70 2005 "hello"
"hello"

@result array
CA11 0200 70 58 01 20 05 "hello"
("hello")

######################
### Unknown types ####
######################
# higher 5 bits allowed values:
# 0,1,2,3,4,5,6,7,8
# 10,11,12,13,14,15
# BAD VALUES: > 15, 9

@unknown type
CA11 0200 70 50 01 03 "bad" 48
error(unknown type)

CA11 0200 70 50 01 03 "bad" 80
error(unknown type)

CA11 0200 70 50 01 03 "bad" 88
error(unknown type)

CA11 0200 70 50 01 03 "bad" 90
error(unknown type)

CA11 0200 70 50 01 03 "bad" 98
error(unknown type)

CA11 0200 70 50 01 03 "bad" A0
error(unknown type)

CA11 0200 70 50 01 03 "bad" A8
error(unknown type)

CA11 0200 70 50 01 03 "bad" B0
error(unknown type)

CA11 0200 70 50 01 03 "bad" B8
error(unknown type)

CA11 0200 70 50 01 03 "bad" C0
error(unknown type)

CA11 0200 70 50 01 03 "bad" C8
error(unknown type)

CA11 0200 70 50 01 03 "bad" D0
error(unknown type)

CA11 0200 70 50 01 03 "bad" D8
error(unknown type)

CA11 0200 70 50 01 03 "bad" E0
error(unknown type)

CA11 0200 70 50 01 03 "bad" E8
error(unknown type)

CA11 0200 70 50 01 03 "bad" F0
error(unknown type)

CA11 0200 70 50 01 03 "bad" F8
error(unknown type)

# TODO: response/call/fault misplaced in data....

###################################################
#### Misplaced response/call/fault within data ####
###################################################

@misplaced response
CA11 0200 70 50 01 07 "invalid" 70 08 01
error(unknown type)

@misplaced call
CA11 0200 70 50 01 07 "invalid" 68 04 "help" 20 04 "what"
error(unknown type)

@misplaced fault
CA11 0200 70 50 01 07 "invalid" 78 39 f401 200a "FAULT_TEST"
error(unknown type)

###############################
### Data after response end ###
###############################
@data after response end
CA11  0200  70 50 01 06 "status" 38 c8 39 f401
error(data after end)

############################
### Unknown message type ###
############################
@bad message type
CA11 0300 80 50 01 07 "goodint" 09 e803
error(invalid message type)

#########################
### Invalid call name ###
#########################
@empty call name is illegal
#MGC VER  CALL    STR   "what"
CA11 0200 68   00 20 04 "what"
error(bad call name)

# END
